export class AI {
    basic: Basic;
    get: import("../get/index.js").Get;
    /**
     * @param { any } obj
     * @param { boolean } [similar] true伪equals, false统一前缀
     * @returns { string } cacheKey
     */
    getCacheKey(obj: any, similar?: boolean | undefined): string;
    /**
     * 获取viewer视角下target手牌的点数、最大值和最小值
     * @param { Player } target
     * @param { Player | true } [viewer] 视角，true则透视
     * @param { function (Card): boolean | Card[] } [cards] 枚举的卡牌或卡牌筛选条件
     * @param { string } [access] Cache存取，默认"11"。第一位为"1"存入，第二位为"1"读取
     * @param { number } r 最大值限制，默认13
     * @param { number } l 最小值限制，默认1
     * @returns { { nums: number[], max: number, min: number } }
     */
    guessTargetPoints(target: Player, viewer?: Player | true, cards?: ((arg0: Card) => boolean | Card[]) | undefined, access?: string | undefined, r?: number, l?: number): {
        nums: number[];
        max: number;
        min: number;
    };
}
export let ai: AI;
export function setAI(instance?: AI | undefined): void;
export { Basic };
import { Basic } from "./basic.js";
